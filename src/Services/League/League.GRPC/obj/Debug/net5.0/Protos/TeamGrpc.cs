// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/team.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace League.GRPC.Protos {
  public static partial class TeamProtoService
  {
    static readonly string __ServiceName = "TeamProtoService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetTeamRequest> __Marshaller_GetTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetTeamRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.TeamModel> __Marshaller_TeamModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.TeamModel.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetTeamByNameRequest> __Marshaller_GetTeamByNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetTeamByNameRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetTeamsFilerRequest> __Marshaller_GetTeamsFilerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetTeamsFilerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.TeamModels> __Marshaller_TeamModels = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.TeamModels.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.CreateTeamRequest> __Marshaller_CreateTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.CreateTeamRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.UpdateTeamRequest> __Marshaller_UpdateTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.UpdateTeamRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.DeleteTeamRequest> __Marshaller_DeleteTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.DeleteTeamRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.DeleteTeamResponse> __Marshaller_DeleteTeamResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.DeleteTeamResponse.Parser));

    static readonly grpc::Method<global::League.GRPC.Protos.GetTeamRequest, global::League.GRPC.Protos.TeamModel> __Method_GetTeam = new grpc::Method<global::League.GRPC.Protos.GetTeamRequest, global::League.GRPC.Protos.TeamModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTeam",
        __Marshaller_GetTeamRequest,
        __Marshaller_TeamModel);

    static readonly grpc::Method<global::League.GRPC.Protos.GetTeamByNameRequest, global::League.GRPC.Protos.TeamModel> __Method_GetTeamByName = new grpc::Method<global::League.GRPC.Protos.GetTeamByNameRequest, global::League.GRPC.Protos.TeamModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTeamByName",
        __Marshaller_GetTeamByNameRequest,
        __Marshaller_TeamModel);

    static readonly grpc::Method<global::League.GRPC.Protos.GetTeamsFilerRequest, global::League.GRPC.Protos.TeamModels> __Method_GetTeams = new grpc::Method<global::League.GRPC.Protos.GetTeamsFilerRequest, global::League.GRPC.Protos.TeamModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTeams",
        __Marshaller_GetTeamsFilerRequest,
        __Marshaller_TeamModels);

    static readonly grpc::Method<global::League.GRPC.Protos.CreateTeamRequest, global::League.GRPC.Protos.TeamModel> __Method_CreateTeam = new grpc::Method<global::League.GRPC.Protos.CreateTeamRequest, global::League.GRPC.Protos.TeamModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTeam",
        __Marshaller_CreateTeamRequest,
        __Marshaller_TeamModel);

    static readonly grpc::Method<global::League.GRPC.Protos.UpdateTeamRequest, global::League.GRPC.Protos.TeamModel> __Method_UpdateTeam = new grpc::Method<global::League.GRPC.Protos.UpdateTeamRequest, global::League.GRPC.Protos.TeamModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTeam",
        __Marshaller_UpdateTeamRequest,
        __Marshaller_TeamModel);

    static readonly grpc::Method<global::League.GRPC.Protos.DeleteTeamRequest, global::League.GRPC.Protos.DeleteTeamResponse> __Method_DeleteTeam = new grpc::Method<global::League.GRPC.Protos.DeleteTeamRequest, global::League.GRPC.Protos.DeleteTeamResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTeam",
        __Marshaller_DeleteTeamRequest,
        __Marshaller_DeleteTeamResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::League.GRPC.Protos.TeamReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TeamProtoService</summary>
    [grpc::BindServiceMethod(typeof(TeamProtoService), "BindService")]
    public abstract partial class TeamProtoServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.TeamModel> GetTeam(global::League.GRPC.Protos.GetTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.TeamModel> GetTeamByName(global::League.GRPC.Protos.GetTeamByNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.TeamModels> GetTeams(global::League.GRPC.Protos.GetTeamsFilerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.TeamModel> CreateTeam(global::League.GRPC.Protos.CreateTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.TeamModel> UpdateTeam(global::League.GRPC.Protos.UpdateTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.DeleteTeamResponse> DeleteTeam(global::League.GRPC.Protos.DeleteTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(TeamProtoServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetTeam, serviceImpl.GetTeam)
          .AddMethod(__Method_GetTeamByName, serviceImpl.GetTeamByName)
          .AddMethod(__Method_GetTeams, serviceImpl.GetTeams)
          .AddMethod(__Method_CreateTeam, serviceImpl.CreateTeam)
          .AddMethod(__Method_UpdateTeam, serviceImpl.UpdateTeam)
          .AddMethod(__Method_DeleteTeam, serviceImpl.DeleteTeam).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TeamProtoServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetTeamRequest, global::League.GRPC.Protos.TeamModel>(serviceImpl.GetTeam));
      serviceBinder.AddMethod(__Method_GetTeamByName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetTeamByNameRequest, global::League.GRPC.Protos.TeamModel>(serviceImpl.GetTeamByName));
      serviceBinder.AddMethod(__Method_GetTeams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetTeamsFilerRequest, global::League.GRPC.Protos.TeamModels>(serviceImpl.GetTeams));
      serviceBinder.AddMethod(__Method_CreateTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.CreateTeamRequest, global::League.GRPC.Protos.TeamModel>(serviceImpl.CreateTeam));
      serviceBinder.AddMethod(__Method_UpdateTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.UpdateTeamRequest, global::League.GRPC.Protos.TeamModel>(serviceImpl.UpdateTeam));
      serviceBinder.AddMethod(__Method_DeleteTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.DeleteTeamRequest, global::League.GRPC.Protos.DeleteTeamResponse>(serviceImpl.DeleteTeam));
    }

  }
}
#endregion
