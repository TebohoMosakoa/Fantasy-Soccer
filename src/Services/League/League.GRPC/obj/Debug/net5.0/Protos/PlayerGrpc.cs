// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/player.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace League.GRPC.Protos {
  public static partial class PlayerProtoService
  {
    static readonly string __ServiceName = "PlayerProtoService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayerRequest> __Marshaller_GetPlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.PlayerModel> __Marshaller_PlayerModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.PlayerModel.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayerByNameRequest> __Marshaller_GetPlayerByNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayerByNameRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.PlayerModels> __Marshaller_PlayerModels = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.PlayerModels.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayersFilerRequest> __Marshaller_GetPlayersFilerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayersFilerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayersByTeamRequest> __Marshaller_GetPlayersByTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayersByTeamRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.CreatePlayerRequest> __Marshaller_CreatePlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.CreatePlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.UpdatePlayerRequest> __Marshaller_UpdatePlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.UpdatePlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.DeletePlayerRequest> __Marshaller_DeletePlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.DeletePlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.DeletePlayerResponse> __Marshaller_DeletePlayerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.DeletePlayerResponse.Parser));

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayerRequest, global::League.GRPC.Protos.PlayerModel> __Method_GetPlayer = new grpc::Method<global::League.GRPC.Protos.GetPlayerRequest, global::League.GRPC.Protos.PlayerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayer",
        __Marshaller_GetPlayerRequest,
        __Marshaller_PlayerModel);

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayerByNameRequest, global::League.GRPC.Protos.PlayerModels> __Method_GetPlayersByName = new grpc::Method<global::League.GRPC.Protos.GetPlayerByNameRequest, global::League.GRPC.Protos.PlayerModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayersByName",
        __Marshaller_GetPlayerByNameRequest,
        __Marshaller_PlayerModels);

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayersFilerRequest, global::League.GRPC.Protos.PlayerModels> __Method_GetPlayers = new grpc::Method<global::League.GRPC.Protos.GetPlayersFilerRequest, global::League.GRPC.Protos.PlayerModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayers",
        __Marshaller_GetPlayersFilerRequest,
        __Marshaller_PlayerModels);

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayersByTeamRequest, global::League.GRPC.Protos.PlayerModels> __Method_GetPlayersByTeam = new grpc::Method<global::League.GRPC.Protos.GetPlayersByTeamRequest, global::League.GRPC.Protos.PlayerModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayersByTeam",
        __Marshaller_GetPlayersByTeamRequest,
        __Marshaller_PlayerModels);

    static readonly grpc::Method<global::League.GRPC.Protos.CreatePlayerRequest, global::League.GRPC.Protos.PlayerModel> __Method_CreatePlayer = new grpc::Method<global::League.GRPC.Protos.CreatePlayerRequest, global::League.GRPC.Protos.PlayerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePlayer",
        __Marshaller_CreatePlayerRequest,
        __Marshaller_PlayerModel);

    static readonly grpc::Method<global::League.GRPC.Protos.UpdatePlayerRequest, global::League.GRPC.Protos.PlayerModel> __Method_UpdatePlayer = new grpc::Method<global::League.GRPC.Protos.UpdatePlayerRequest, global::League.GRPC.Protos.PlayerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePlayer",
        __Marshaller_UpdatePlayerRequest,
        __Marshaller_PlayerModel);

    static readonly grpc::Method<global::League.GRPC.Protos.DeletePlayerRequest, global::League.GRPC.Protos.DeletePlayerResponse> __Method_DeletePlayer = new grpc::Method<global::League.GRPC.Protos.DeletePlayerRequest, global::League.GRPC.Protos.DeletePlayerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePlayer",
        __Marshaller_DeletePlayerRequest,
        __Marshaller_DeletePlayerResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::League.GRPC.Protos.PlayerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PlayerProtoService</summary>
    [grpc::BindServiceMethod(typeof(PlayerProtoService), "BindService")]
    public abstract partial class PlayerProtoServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.PlayerModel> GetPlayer(global::League.GRPC.Protos.GetPlayerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.PlayerModels> GetPlayersByName(global::League.GRPC.Protos.GetPlayerByNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.PlayerModels> GetPlayers(global::League.GRPC.Protos.GetPlayersFilerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.PlayerModels> GetPlayersByTeam(global::League.GRPC.Protos.GetPlayersByTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.PlayerModel> CreatePlayer(global::League.GRPC.Protos.CreatePlayerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.PlayerModel> UpdatePlayer(global::League.GRPC.Protos.UpdatePlayerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::League.GRPC.Protos.DeletePlayerResponse> DeletePlayer(global::League.GRPC.Protos.DeletePlayerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PlayerProtoServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPlayer, serviceImpl.GetPlayer)
          .AddMethod(__Method_GetPlayersByName, serviceImpl.GetPlayersByName)
          .AddMethod(__Method_GetPlayers, serviceImpl.GetPlayers)
          .AddMethod(__Method_GetPlayersByTeam, serviceImpl.GetPlayersByTeam)
          .AddMethod(__Method_CreatePlayer, serviceImpl.CreatePlayer)
          .AddMethod(__Method_UpdatePlayer, serviceImpl.UpdatePlayer)
          .AddMethod(__Method_DeletePlayer, serviceImpl.DeletePlayer).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PlayerProtoServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetPlayer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetPlayerRequest, global::League.GRPC.Protos.PlayerModel>(serviceImpl.GetPlayer));
      serviceBinder.AddMethod(__Method_GetPlayersByName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetPlayerByNameRequest, global::League.GRPC.Protos.PlayerModels>(serviceImpl.GetPlayersByName));
      serviceBinder.AddMethod(__Method_GetPlayers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetPlayersFilerRequest, global::League.GRPC.Protos.PlayerModels>(serviceImpl.GetPlayers));
      serviceBinder.AddMethod(__Method_GetPlayersByTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.GetPlayersByTeamRequest, global::League.GRPC.Protos.PlayerModels>(serviceImpl.GetPlayersByTeam));
      serviceBinder.AddMethod(__Method_CreatePlayer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.CreatePlayerRequest, global::League.GRPC.Protos.PlayerModel>(serviceImpl.CreatePlayer));
      serviceBinder.AddMethod(__Method_UpdatePlayer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.UpdatePlayerRequest, global::League.GRPC.Protos.PlayerModel>(serviceImpl.UpdatePlayer));
      serviceBinder.AddMethod(__Method_DeletePlayer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::League.GRPC.Protos.DeletePlayerRequest, global::League.GRPC.Protos.DeletePlayerResponse>(serviceImpl.DeletePlayer));
    }

  }
}
#endregion
