// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: player.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace League.GRPC.Protos {
  public static partial class PlayerProtoService
  {
    static readonly string __ServiceName = "PlayerProtoService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayerRequest> __Marshaller_GetPlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.PlayerModel> __Marshaller_PlayerModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.PlayerModel.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayerByNameRequest> __Marshaller_GetPlayerByNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayerByNameRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.PlayerModels> __Marshaller_PlayerModels = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.PlayerModels.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayersFilerRequest> __Marshaller_GetPlayersFilerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayersFilerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.GetPlayersByTeamRequest> __Marshaller_GetPlayersByTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.GetPlayersByTeamRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.CreatePlayerRequest> __Marshaller_CreatePlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.CreatePlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.UpdatePlayerRequest> __Marshaller_UpdatePlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.UpdatePlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.DeletePlayerRequest> __Marshaller_DeletePlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.DeletePlayerRequest.Parser));
    static readonly grpc::Marshaller<global::League.GRPC.Protos.DeletePlayerResponse> __Marshaller_DeletePlayerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::League.GRPC.Protos.DeletePlayerResponse.Parser));

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayerRequest, global::League.GRPC.Protos.PlayerModel> __Method_GetPlayer = new grpc::Method<global::League.GRPC.Protos.GetPlayerRequest, global::League.GRPC.Protos.PlayerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayer",
        __Marshaller_GetPlayerRequest,
        __Marshaller_PlayerModel);

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayerByNameRequest, global::League.GRPC.Protos.PlayerModels> __Method_GetPlayersByName = new grpc::Method<global::League.GRPC.Protos.GetPlayerByNameRequest, global::League.GRPC.Protos.PlayerModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayersByName",
        __Marshaller_GetPlayerByNameRequest,
        __Marshaller_PlayerModels);

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayersFilerRequest, global::League.GRPC.Protos.PlayerModels> __Method_GetPlayers = new grpc::Method<global::League.GRPC.Protos.GetPlayersFilerRequest, global::League.GRPC.Protos.PlayerModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayers",
        __Marshaller_GetPlayersFilerRequest,
        __Marshaller_PlayerModels);

    static readonly grpc::Method<global::League.GRPC.Protos.GetPlayersByTeamRequest, global::League.GRPC.Protos.PlayerModels> __Method_GetPlayersByTeam = new grpc::Method<global::League.GRPC.Protos.GetPlayersByTeamRequest, global::League.GRPC.Protos.PlayerModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayersByTeam",
        __Marshaller_GetPlayersByTeamRequest,
        __Marshaller_PlayerModels);

    static readonly grpc::Method<global::League.GRPC.Protos.CreatePlayerRequest, global::League.GRPC.Protos.PlayerModel> __Method_CreatePlayer = new grpc::Method<global::League.GRPC.Protos.CreatePlayerRequest, global::League.GRPC.Protos.PlayerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePlayer",
        __Marshaller_CreatePlayerRequest,
        __Marshaller_PlayerModel);

    static readonly grpc::Method<global::League.GRPC.Protos.UpdatePlayerRequest, global::League.GRPC.Protos.PlayerModel> __Method_UpdatePlayer = new grpc::Method<global::League.GRPC.Protos.UpdatePlayerRequest, global::League.GRPC.Protos.PlayerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePlayer",
        __Marshaller_UpdatePlayerRequest,
        __Marshaller_PlayerModel);

    static readonly grpc::Method<global::League.GRPC.Protos.DeletePlayerRequest, global::League.GRPC.Protos.DeletePlayerResponse> __Method_DeletePlayer = new grpc::Method<global::League.GRPC.Protos.DeletePlayerRequest, global::League.GRPC.Protos.DeletePlayerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePlayer",
        __Marshaller_DeletePlayerRequest,
        __Marshaller_DeletePlayerResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::League.GRPC.Protos.PlayerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PlayerProtoService</summary>
    public partial class PlayerProtoServiceClient : grpc::ClientBase<PlayerProtoServiceClient>
    {
      /// <summary>Creates a new client for PlayerProtoService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PlayerProtoServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PlayerProtoService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PlayerProtoServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PlayerProtoServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PlayerProtoServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::League.GRPC.Protos.PlayerModel GetPlayer(global::League.GRPC.Protos.GetPlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.PlayerModel GetPlayer(global::League.GRPC.Protos.GetPlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModel> GetPlayerAsync(global::League.GRPC.Protos.GetPlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModel> GetPlayerAsync(global::League.GRPC.Protos.GetPlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayer, null, options, request);
      }
      public virtual global::League.GRPC.Protos.PlayerModels GetPlayersByName(global::League.GRPC.Protos.GetPlayerByNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayersByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.PlayerModels GetPlayersByName(global::League.GRPC.Protos.GetPlayerByNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayersByName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModels> GetPlayersByNameAsync(global::League.GRPC.Protos.GetPlayerByNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayersByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModels> GetPlayersByNameAsync(global::League.GRPC.Protos.GetPlayerByNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayersByName, null, options, request);
      }
      public virtual global::League.GRPC.Protos.PlayerModels GetPlayers(global::League.GRPC.Protos.GetPlayersFilerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.PlayerModels GetPlayers(global::League.GRPC.Protos.GetPlayersFilerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModels> GetPlayersAsync(global::League.GRPC.Protos.GetPlayersFilerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModels> GetPlayersAsync(global::League.GRPC.Protos.GetPlayersFilerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayers, null, options, request);
      }
      public virtual global::League.GRPC.Protos.PlayerModels GetPlayersByTeam(global::League.GRPC.Protos.GetPlayersByTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayersByTeam(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.PlayerModels GetPlayersByTeam(global::League.GRPC.Protos.GetPlayersByTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayersByTeam, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModels> GetPlayersByTeamAsync(global::League.GRPC.Protos.GetPlayersByTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayersByTeamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModels> GetPlayersByTeamAsync(global::League.GRPC.Protos.GetPlayersByTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayersByTeam, null, options, request);
      }
      public virtual global::League.GRPC.Protos.PlayerModel CreatePlayer(global::League.GRPC.Protos.CreatePlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.PlayerModel CreatePlayer(global::League.GRPC.Protos.CreatePlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModel> CreatePlayerAsync(global::League.GRPC.Protos.CreatePlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModel> CreatePlayerAsync(global::League.GRPC.Protos.CreatePlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePlayer, null, options, request);
      }
      public virtual global::League.GRPC.Protos.PlayerModel UpdatePlayer(global::League.GRPC.Protos.UpdatePlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.PlayerModel UpdatePlayer(global::League.GRPC.Protos.UpdatePlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModel> UpdatePlayerAsync(global::League.GRPC.Protos.UpdatePlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.PlayerModel> UpdatePlayerAsync(global::League.GRPC.Protos.UpdatePlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePlayer, null, options, request);
      }
      public virtual global::League.GRPC.Protos.DeletePlayerResponse DeletePlayer(global::League.GRPC.Protos.DeletePlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::League.GRPC.Protos.DeletePlayerResponse DeletePlayer(global::League.GRPC.Protos.DeletePlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.DeletePlayerResponse> DeletePlayerAsync(global::League.GRPC.Protos.DeletePlayerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::League.GRPC.Protos.DeletePlayerResponse> DeletePlayerAsync(global::League.GRPC.Protos.DeletePlayerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePlayer, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PlayerProtoServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PlayerProtoServiceClient(configuration);
      }
    }

  }
}
#endregion
