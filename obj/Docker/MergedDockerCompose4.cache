services:
  fantasy.api:
    build:
      context: C:\Users\User\source\repos\Fantasy
      dockerfile: src/Services/Fantasy/Fantasy.API/Dockerfile
    container_name: fantasy.api
    depends_on:
      fantasydb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://fantasydb:27017
    image: fantasyapi
    ports:
    - published: 8012
      target: 80
  fantasydb:
    container_name: fantasydb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
  fantasyteam.api:
    build:
      context: C:\Users\User\source\repos\Fantasy
      dockerfile: src/Services/FantasyTeam/FantasyTeam.API/Dockerfile
    container_name: fantasyteam.api
    depends_on:
      fantasyteamdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: fantasyteamdb:6379
      GrpcSettings:PlayerUrl: http://league.grpc
    image: fantasyteamapi
    ports:
    - published: 8013
      target: 80
  fantasyteamdb:
    container_name: fantasyteamdb
    image: redis:alpine
    ports:
    - published: 6379
      target: 6379
    restart: always
  league.api:
    build:
      context: C:\Users\User\source\repos\Fantasy
      dockerfile: src/Services/League/League.API/Dockerfile
    container_name: league.api
    depends_on:
      leaguedb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=leaguedb;Port=5432;Database=LeagueDb;User
        Id=admin;Password=admin1234;
    image: leagueapi
    ports:
    - published: 8011
      target: 80
  league.grpc:
    build:
      context: C:\Users\User\source\repos\Fantasy
      dockerfile: src/Services/League/League.GRPC/Dockerfile
    container_name: league.grpc
    depends_on:
      leaguedb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=leaguedb;Port=5432;Database=LeagueDb;User
        Id=admin;Password=admin1234;
    image: leaguegrpc
    ports:
    - published: 8010
      target: 80
  leaguedb:
    container_name: leaguedb
    environment:
      POSTGRES_DB: LeagueDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    ports:
    - published: 5432
      target: 5432
    restart: always
    volumes:
    - postgres_data:/var/lib/postgresql/data/:rw
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: mosakoateboho@gmail.com.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    ports:
    - published: 5050
      target: 80
    restart: always
    volumes:
    - pgadmin_data:/root/.pgadmin:rw
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports:
    - published: 8080
      target: 8080
    - published: 9000
      target: 9000
    restart: always
    volumes:
    - portainer_data:/data:rw
    - /var/run/docker.sock:/var/run/docker.sock:rw
version: '3.4'
volumes:
  mongo_data: {}
  pgadmin_data: {}
  portainer_data: {}
  postgres_data: {}